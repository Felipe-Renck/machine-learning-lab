/**
 * ML Lab Service
 * Functionality to create and manage Lab projects, services, datasets, models, and experiments.
 *
 * OpenAPI spec version: 0.2.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExperimentResources model module.
 * @module model/ExperimentResources
 * @version 0.2.0-SNAPSHOT
 */
export default class ExperimentResources {
  /**
   * Constructs a new <code>ExperimentResources</code>.
   * @alias module:model/ExperimentResources
   * @class
   */

  constructor() {}

  /**
   * Constructs a <code>ExperimentResources</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ExperimentResources} obj Optional instance to populate.
   * @return {module:model/ExperimentResources} The populated <code>ExperimentResources</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ExperimentResources();

      if (data.hasOwnProperty('input')) {
        obj['input'] = ApiClient.convertToType(data['input'], ['String']);
      }
      if (data.hasOwnProperty('artifacts')) {
        obj['artifacts'] = ApiClient.convertToType(data['artifacts'], [
          'String',
        ]);
      }
      if (data.hasOwnProperty('output')) {
        obj['output'] = ApiClient.convertToType(data['output'], ['String']);
      }
      if (data.hasOwnProperty('experimentDir')) {
        obj['experimentDir'] = ApiClient.convertToType(
          data['experimentDir'],
          'String'
        );
      }
      if (data.hasOwnProperty('experimentBackup')) {
        obj['experimentBackup'] = ApiClient.convertToType(
          data['experimentBackup'],
          'String'
        );
      }
      if (data.hasOwnProperty('sourceCode')) {
        obj['sourceCode'] = ApiClient.convertToType(
          data['sourceCode'],
          'String'
        );
      }
      if (data.hasOwnProperty('sourceScript')) {
        obj['sourceScript'] = ApiClient.convertToType(
          data['sourceScript'],
          'String'
        );
      }
      if (data.hasOwnProperty('tensorboardLogs')) {
        obj['tensorboardLogs'] = ApiClient.convertToType(
          data['tensorboardLogs'],
          'String'
        );
      }
      if (data.hasOwnProperty('stdout')) {
        obj['stdout'] = ApiClient.convertToType(data['stdout'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {Array.<String>} input
   */
  input = undefined;
  /**
   * @member {Array.<String>} artifacts
   */
  artifacts = undefined;
  /**
   * @member {Array.<String>} output
   */
  output = undefined;
  /**
   * @member {String} experimentDir
   */
  experimentDir = undefined;
  /**
   * @member {String} experimentBackup
   */
  experimentBackup = undefined;
  /**
   * @member {String} sourceCode
   */
  sourceCode = undefined;
  /**
   * @member {String} sourceScript
   */
  sourceScript = undefined;
  /**
   * @member {String} tensorboardLogs
   */
  tensorboardLogs = undefined;
  /**
   * @member {String} stdout
   */
  stdout = undefined;
}
