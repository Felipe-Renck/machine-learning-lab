/**
 * ML Lab Service
 * Functionality to create and manage Lab projects, services, datasets, models, and experiments.
 *
 * OpenAPI spec version: 0.2.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExperimentResources from './ExperimentResources';
import GitInfo from './GitInfo';
import HostInfo from './HostInfo';

/**
* The LabExperiment model module.
* @module model/LabExperiment
* @version 0.2.0-SNAPSHOT
*/
export default class LabExperiment {
    /**
    * Constructs a new <code>LabExperiment</code>.
    * @alias module:model/LabExperiment
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>LabExperiment</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/LabExperiment} obj Optional instance to populate.
    * @return {module:model/LabExperiment} The populated <code>LabExperiment</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LabExperiment();
                        
            
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('groupKey')) {
                obj['groupKey'] = ApiClient.convertToType(data['groupKey'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operator')) {
                obj['operator'] = ApiClient.convertToType(data['operator'], 'String');
            }
            if (data.hasOwnProperty('scriptName')) {
                obj['scriptName'] = ApiClient.convertToType(data['scriptName'], 'String');
            }
            if (data.hasOwnProperty('scriptType')) {
                obj['scriptType'] = ApiClient.convertToType(data['scriptType'], 'String');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Number');
            }
            if (data.hasOwnProperty('finishedAt')) {
                obj['finishedAt'] = ApiClient.convertToType(data['finishedAt'], 'Number');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Number');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('command')) {
                obj['command'] = ApiClient.convertToType(data['command'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('clientVersion')) {
                obj['clientVersion'] = ApiClient.convertToType(data['clientVersion'], 'String');
            }
            if (data.hasOwnProperty('git')) {
                obj['git'] = GitInfo.constructFromObject(data['git']);
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = HostInfo.constructFromObject(data['host']);
            }
            if (data.hasOwnProperty('dependencies')) {
                obj['dependencies'] = ApiClient.convertToType(data['dependencies'], ['String']);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ExperimentResources.constructFromObject(data['resources']);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': Object});
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], {'String': Object});
            }
            if (data.hasOwnProperty('others')) {
                obj['others'] = ApiClient.convertToType(data['others'], {'String': Object});
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {String} key
    */
    'key' = undefined;
    /**
    * @member {String} groupKey
    */
    'groupKey' = undefined;
    /**
    * @member {String} name
    */
    'name' = undefined;
    /**
    * @member {String} operator
    */
    'operator' = undefined;
    /**
    * @member {String} scriptName
    */
    'scriptName' = undefined;
    /**
    * @member {String} scriptType
    */
    'scriptType' = undefined;
    /**
    * @member {String} project
    */
    'project' = undefined;
    /**
    * @member {Number} startedAt
    */
    'startedAt' = undefined;
    /**
    * @member {Number} finishedAt
    */
    'finishedAt' = undefined;
    /**
    * @member {Number} updatedAt
    */
    'updatedAt' = undefined;
    /**
    * @member {Number} duration
    */
    'duration' = undefined;
    /**
    * @member {String} status
    */
    'status' = undefined;
    /**
    * @member {String} command
    */
    'command' = undefined;
    /**
    * @member {Array.<String>} tags
    */
    'tags' = undefined;
    /**
    * @member {String} note
    */
    'note' = undefined;
    /**
    * @member {String} clientVersion
    */
    'clientVersion' = undefined;
    /**
    * @member {module:model/GitInfo} git
    */
    'git' = undefined;
    /**
    * @member {module:model/HostInfo} host
    */
    'host' = undefined;
    /**
    * @member {Array.<String>} dependencies
    */
    'dependencies' = undefined;
    /**
    * @member {module:model/ExperimentResources} resources
    */
    'resources' = undefined;
    /**
    * @member {Object.<String, Object>} parameters
    */
    'parameters' = undefined;
    /**
    * @member {Object.<String, Object>} metrics
    */
    'metrics' = undefined;
    /**
    * @member {Object.<String, Object>} others
    */
    'others' = undefined;
    /**
    * @member {String} result
    */
    'result' = undefined;




}
