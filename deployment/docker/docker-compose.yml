services:
  ml-lab-backend:
    image: py-machine-learning-lab:latest
    ports:
      - "30010:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JWT_TOKEN_SECRET=please-change-this-secret
#      - SERVICE_SSL_ENABLED=true
      - CONTAXY_HOST=localhost:30010
#      - OIDC_AUTH_ENABLED=True
#      - OIDC_AUTH_URL=
#      - OIDC_TOKEN_URL=
#      - OIDC_CLIENT_ID=
#      - OIDC_CLIENT_SECRET=
      - POSTGRES_CONNECTION_URI=postgresql://postgres:postgres-password-change-me@postgres:5432/postgres
      - S3_ENDPOINT=s3:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minio-password-change-me
      - USER_REGISTRATION_ENABLED=True
      - CONTAXY_API_ENDPOINT=http://ml-lab-backend:8090
    depends_on:
      - postgres
      - s3
#    secrets:
#      - source: ssl_cert
#        target: /run/secrets/cert.crt
#      - source: ssl_key
#        target: /run/secrets/cert.key

  ml-lab-backend-setup:
    image: curlimages/curl:7.75.0
    entrypoint:
      ["sh", "-c", "sleep 5 && curl ml-lab-backend:8080/system/initialize"]
    restart: "no"
    depends_on:
      - ml-lab-backend


  postgres:
    image: postgres:13.2
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres-password-change-me
    # ports:
    #   - "127.0.0.1:30011:5432"
    volumes:
      - lab-postgres-data:/var/lib/postgresql/data

  # Web interface to access postgres DB
  # (ATTENTION: uncommenting gives access to the DB without authentication)
  # pgweb:
  #   container_name: pgweb
  #   restart: always
  #   image: sosedoff/pgweb
  #   # ports:
  #   #   - "30012:8081"
  #   environment:
  #     - DATABASE_URL=postgres://postgres:postgres-password-change-me@postgres:5432/postgres?sslmode=disable
  #   depends_on:
  #     - postgres

  s3:
    image: minio/minio:RELEASE.2021-03-04T00-53-13Z
    command: server /data/data{1...4}
    # ports:
    #     - "127.0.0.1:30013:9000"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minio-password-change-me
    volumes:
      - lab-s3-data:/data

  # Start all ML Lab components:

  lab-workspace-manager:
    container_name: pylab-p-pylab-global-s-workspace-manager
    image: lab-workspace-manager:latest
    environment:
      - CONTAXY_API_ENDPOINT=http://ml-lab-backend:8090
      - CONTAXY_DEPLOYMENT_NAME=pylab-p-pylab-global-s-workspace-manager
      - CONTAXY_SERVICE_URL=/projects/ctxy-global/services/pylab-p-pylab-global-s-workspace-manager/access/8080
      - WORKSPACE_MAX_MEMORY_MB=1024
      - WORKSPACE_MAX_CPUS=1
    labels:
      ctxy.deploymentType: "extension"
      ctxy.deploymentName: "pylab-p-pylab-global-s-workspace-manager"
      ctxy.displayName: "Workspaces"
      ctxy.endpoints: "8080"
      ctxy.namespace: "pylab"
      ctxy.projectName: "ctxy-global"
      ctxy.extensionType: "global-extension"
      ctxy.icon: "code"
      ctxy.ui_extension_endpoint: "8080/app#/users/{env.userId}/workspace"
      ctxy.api_extension_endpoint: "8080/api"
      display_priority: 95
    depends_on:
      - ml-lab-backend

#secrets:
#  ssl_cert:
#    file: /docker_mount/ssl/cert.crt
#  ssl_key:
#    file: /docker_mount/ssl/cert.key
volumes:
  lab-postgres-data:
    # External volumes need to be manually created with "docker volume create contaxy-postgres-data"
    # This is done to prevent data loss on "docker-compose down"
#    external: true
  lab-s3-data:
#    external: true
